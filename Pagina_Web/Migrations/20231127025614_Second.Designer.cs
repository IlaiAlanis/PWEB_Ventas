// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pagina_Web.Models.dbModels;

#nullable disable

namespace Pagina_Web.Migrations
{
    [DbContext(typeof(paginaVentasContextDTO))]
    [Migration("20231127025614_Second")]
    partial class Second
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Pagina_Web.Models.dbModels.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ApellidoUsuario")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("apellido_usuario");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("IdDir")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("nombre_usuario");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("UserfechaNacUsuario")
                        .HasColumnType("date")
                        .HasColumnName("userfecha_nac_usuario");

                    b.HasKey("Id");

                    b.HasIndex("IdDir");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Pagina_Web.Models.dbModels.Carrito", b =>
                {
                    b.Property<int>("IdUsuarioCarrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_usuario_carrito");

                    b.Property<int>("IdProdCarrito")
                        .HasColumnType("int")
                        .HasColumnName("id_prod_carrito");

                    b.Property<int?>("CantidadCarrito")
                        .HasColumnType("int")
                        .HasColumnName("cantidad_carrito");

                    b.HasKey("IdUsuarioCarrito", "IdProdCarrito")
                        .HasName("pk_DetalleCaVP");

                    b.HasIndex("IdProdCarrito");

                    b.ToTable("Carrito");
                });

            modelBuilder.Entity("Pagina_Web.Models.dbModels.CategoriaProducto", b =>
                {
                    b.Property<int>("IdCat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_cat");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCat"), 1L, 1);

                    b.Property<string>("DescripcionCat")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descripcion_cat");

                    b.Property<string>("NombreCat")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("nombre_cat");

                    b.HasKey("IdCat")
                        .HasName("PK__Categori__D54686DEB23C5554");

                    b.ToTable("Categoria_Producto");
                });

            modelBuilder.Entity("Pagina_Web.Models.dbModels.DetalleVp", b =>
                {
                    b.Property<int>("IdVentaDvp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_venta_DVP");

                    b.Property<int>("IdProductoDvp")
                        .HasColumnType("int")
                        .HasColumnName("id_producto_DVP");

                    b.Property<int>("CantidadDvp")
                        .HasColumnType("int")
                        .HasColumnName("cantidad_DVP");

                    b.Property<decimal>("PrecioDvp")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("precio_DVP");

                    b.HasKey("IdVentaDvp", "IdProductoDvp")
                        .HasName("pk_DetalleVP");

                    b.HasIndex("IdProductoDvp");

                    b.ToTable("DetalleVP");
                });

            modelBuilder.Entity("Pagina_Web.Models.dbModels.Direccion", b =>
                {
                    b.Property<int>("IdDir")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_dir");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDir"), 1L, 1);

                    b.Property<int>("IdEstUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_est_usuario");

                    b.Property<int>("IdMunUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_mun_usuario");

                    b.Property<string>("NumExtUsuario")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("num_ext_usuario");

                    b.HasKey("IdDir")
                        .HasName("PK__Direccio__D5EA00D7F944A9D8");

                    b.HasIndex("IdEstUsuario");

                    b.HasIndex("IdMunUsuario");

                    b.ToTable("Direccion");
                });

            modelBuilder.Entity("Pagina_Web.Models.dbModels.Estado", b =>
                {
                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_estado");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstado"), 1L, 1);

                    b.Property<string>("NombreEstado")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("nombre_estado");

                    b.HasKey("IdEstado")
                        .HasName("PK__Estado__86989FB27929A05F");

                    b.ToTable("Estado");
                });

            modelBuilder.Entity("Pagina_Web.Models.dbModels.MarcaProducto", b =>
                {
                    b.Property<int>("IdMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_marca");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMarca"), 1L, 1);

                    b.Property<string>("DescripcionMar")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descripcion_mar");

                    b.Property<string>("NombreMar")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("nombre_mar");

                    b.HasKey("IdMarca")
                        .HasName("PK__Marca_Pr__7E43E99E37A4CAA5");

                    b.ToTable("Marca_Producto");
                });

            modelBuilder.Entity("Pagina_Web.Models.dbModels.Municipio", b =>
                {
                    b.Property<int>("IdMunicipio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_municipio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMunicipio"), 1L, 1);

                    b.Property<int?>("IdEstado")
                        .HasColumnType("int")
                        .HasColumnName("id_estado");

                    b.Property<string>("NombreMunicipio")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("nombre_municipio");

                    b.HasKey("IdMunicipio")
                        .HasName("PK__Municipi__01C9EB9912D87159");

                    b.HasIndex("IdEstado");

                    b.ToTable("Municipio");
                });

            modelBuilder.Entity("Pagina_Web.Models.dbModels.Pago", b =>
                {
                    b.Property<int>("IdPagos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_pagos");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPagos"), 1L, 1);

                    b.Property<string>("DescripcionPagos")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion_pagos");

                    b.Property<string>("MetodosPagoPagos")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("metodosPago_pagos");

                    b.HasKey("IdPagos")
                        .HasName("PK__Pagos__314B9344FFEC664E");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("Pagina_Web.Models.dbModels.Producto", b =>
                {
                    b.Property<int>("IdProd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_prod");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProd"), 1L, 1);

                    b.Property<decimal>("CostoProd")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("costo_prod");

                    b.Property<string>("DescripcionProd")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("descripcion_prod");

                    b.Property<int>("DescuentoProd")
                        .HasColumnType("int")
                        .HasColumnName("descuento_prod");

                    b.Property<decimal>("ExistenciaProd")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("existencia_prod");

                    b.Property<int>("IdCatProd")
                        .HasColumnType("int")
                        .HasColumnName("id_cat_prod");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("imagen");

                    b.Property<decimal>("PrecioProd")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("precio_prod");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("sku");

                    b.HasKey("IdProd")
                        .HasName("PK__Producto__0DA34873F961228A");

                    b.HasIndex("IdCatProd");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("Pagina_Web.Models.dbModels.Ventum", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_venta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenta"), 1L, 1);

                    b.Property<DateTime>("FechaVenta")
                        .HasColumnType("date")
                        .HasColumnName("fecha_venta");

                    b.Property<TimeSpan>("HoraVenta")
                        .HasColumnType("time")
                        .HasColumnName("hora_venta");

                    b.Property<int>("IdPagos")
                        .HasColumnType("int")
                        .HasColumnName("id_pagos");

                    b.Property<int>("IdUsuarioVenta")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario_venta");

                    b.HasKey("IdVenta")
                        .HasName("PK__Venta__459533BF67752151");

                    b.HasIndex("IdPagos");

                    b.HasIndex("IdUsuarioVenta");

                    b.ToTable("Venta");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Pagina_Web.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Pagina_Web.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pagina_Web.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Pagina_Web.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pagina_Web.Models.dbModels.ApplicationUser", b =>
                {
                    b.HasOne("Pagina_Web.Models.dbModels.Direccion", "IdDirNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdDir")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdDirNavigation");
                });

            modelBuilder.Entity("Pagina_Web.Models.dbModels.Carrito", b =>
                {
                    b.HasOne("Pagina_Web.Models.dbModels.Producto", "IdProdCarritoNavigation")
                        .WithMany("Carritos")
                        .HasForeignKey("IdProdCarrito")
                        .IsRequired()
                        .HasConstraintName("fk_ProdCarr");

                    b.HasOne("Pagina_Web.Models.dbModels.ApplicationUser", "IdUsuarioCarritoNavigation")
                        .WithMany("Carritos")
                        .HasForeignKey("IdUsuarioCarrito")
                        .IsRequired()
                        .HasConstraintName("fk_UsuCarr");

                    b.Navigation("IdProdCarritoNavigation");

                    b.Navigation("IdUsuarioCarritoNavigation");
                });

            modelBuilder.Entity("Pagina_Web.Models.dbModels.DetalleVp", b =>
                {
                    b.HasOne("Pagina_Web.Models.dbModels.Producto", "IdProductoDvpNavigation")
                        .WithMany("DetalleVps")
                        .HasForeignKey("IdProductoDvp")
                        .IsRequired()
                        .HasConstraintName("fk_ProdDVP");

                    b.HasOne("Pagina_Web.Models.dbModels.Ventum", "IdVentaDvpNavigation")
                        .WithMany("DetalleVps")
                        .HasForeignKey("IdVentaDvp")
                        .IsRequired()
                        .HasConstraintName("fk_VenDVP");

                    b.Navigation("IdProductoDvpNavigation");

                    b.Navigation("IdVentaDvpNavigation");
                });

            modelBuilder.Entity("Pagina_Web.Models.dbModels.Direccion", b =>
                {
                    b.HasOne("Pagina_Web.Models.dbModels.Estado", "IdEstUsuarioNavigation")
                        .WithMany("Direccions")
                        .HasForeignKey("IdEstUsuario")
                        .IsRequired()
                        .HasConstraintName("fk_EstUs");

                    b.HasOne("Pagina_Web.Models.dbModels.Municipio", "IdMunUsuarioNavigation")
                        .WithMany("Direccions")
                        .HasForeignKey("IdMunUsuario")
                        .IsRequired()
                        .HasConstraintName("fk_MuUs");

                    b.Navigation("IdEstUsuarioNavigation");

                    b.Navigation("IdMunUsuarioNavigation");
                });

            modelBuilder.Entity("Pagina_Web.Models.dbModels.Municipio", b =>
                {
                    b.HasOne("Pagina_Web.Models.dbModels.Estado", "IdEstadoNavigation")
                        .WithMany("Municipios")
                        .HasForeignKey("IdEstado")
                        .HasConstraintName("fk_EstMun");

                    b.Navigation("IdEstadoNavigation");
                });

            modelBuilder.Entity("Pagina_Web.Models.dbModels.Producto", b =>
                {
                    b.HasOne("Pagina_Web.Models.dbModels.CategoriaProducto", "IdCatProdNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdCatProd")
                        .IsRequired()
                        .HasConstraintName("fk_TipProd");

                    b.Navigation("IdCatProdNavigation");
                });

            modelBuilder.Entity("Pagina_Web.Models.dbModels.Ventum", b =>
                {
                    b.HasOne("Pagina_Web.Models.dbModels.Pago", "IdPagosNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdPagos")
                        .IsRequired()
                        .HasConstraintName("fk_PagVen");

                    b.HasOne("Pagina_Web.Models.dbModels.ApplicationUser", "IdUsuarioVentaNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdUsuarioVenta")
                        .IsRequired()
                        .HasConstraintName("fk_ClteVen");

                    b.Navigation("IdPagosNavigation");

                    b.Navigation("IdUsuarioVentaNavigation");
                });

            modelBuilder.Entity("Pagina_Web.Models.dbModels.ApplicationUser", b =>
                {
                    b.Navigation("Carritos");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Pagina_Web.Models.dbModels.CategoriaProducto", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Pagina_Web.Models.dbModels.Direccion", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Pagina_Web.Models.dbModels.Estado", b =>
                {
                    b.Navigation("Direccions");

                    b.Navigation("Municipios");
                });

            modelBuilder.Entity("Pagina_Web.Models.dbModels.Municipio", b =>
                {
                    b.Navigation("Direccions");
                });

            modelBuilder.Entity("Pagina_Web.Models.dbModels.Pago", b =>
                {
                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Pagina_Web.Models.dbModels.Producto", b =>
                {
                    b.Navigation("Carritos");

                    b.Navigation("DetalleVps");
                });

            modelBuilder.Entity("Pagina_Web.Models.dbModels.Ventum", b =>
                {
                    b.Navigation("DetalleVps");
                });
#pragma warning restore 612, 618
        }
    }
}
